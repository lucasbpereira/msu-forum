meta {
  name: Create Answer
  type: http
  seq: 1
}

post {
  url: {{baseUrl}}/api/questions/1/answers
  body: json
  auth: bearer
}

headers {
  Content-Type: application/json
  Authorization: Bearer {{authToken}}
}

body:json {
  {
    "body": "Para conectar Go com PostgreSQL, você pode usar o driver lib/pq. Aqui está um exemplo prático:\n\n```go\nimport (\n    \"database/sql\"\n    _ \"github.com/lib/pq\"\n)\n\ndb, err := sql.Open(\"postgres\", \"postgres://username:password@localhost/dbname?sslmode=disable\")\nif err != nil {\n    log.Fatal(err)\n}\ndefer db.Close()\n```\n\nCertifique-se de ter o driver instalado: `go get github.com/lib/pq`"
  }
}

docs {
  # Criar nova resposta (Protegida)
  
  ## Autenticação:
  Requer token JWT no header Authorization
  
  ## Dados necessários:
  - body: Conteúdo da resposta (mínimo 10 caracteres)
  
  ## Parâmetros:
  - questionId: ID da pergunta (na URL)
  
  ## Resposta:
  - 201: Resposta criada com sucesso
  - 400: Dados inválidos
  - 401: Token inválido
  - 404: Pergunta não encontrada
  - 500: Erro interno
  
  ## Observação:
  Atualiza automaticamente o contador de respostas da pergunta
}
